// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Start Screen Tests should have 4 buttons 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="start-screen-container"
>
    <div
        className="title-container"
    >
        <h1>
            Start Screen
        </h1>
    </div>
    <div
        className="selections-container"
    >
        <Link
            replace={false}
            to="/sign-in"
        >
            <button>
                Sign In/Up
            </button>
        </Link>
        <Link
            replace={false}
            to="/create-deck"
        >
            <button>
                Create A Deck
            </button>
        </Link>
        <Link
            replace={false}
            to="/pick-deck"
        >
            <button>
                Pick A Deck
            </button>
        </Link>
        <Link
            replace={false}
            to="/recall"
        >
            <button>
                Start Game
            </button>
        </Link>
    </div>
</div>,
  "nodes": Array [
    <div
      className="start-screen-container"
>
      <div
            className="title-container"
      >
            <h1>
                  Start Screen
            </h1>
      </div>
      <div
            className="selections-container"
      >
            <Link
                  replace={false}
                  to="/sign-in"
            >
                  <button>
                        Sign In/Up
                  </button>
            </Link>
            <Link
                  replace={false}
                  to="/create-deck"
            >
                  <button>
                        Create A Deck
                  </button>
            </Link>
            <Link
                  replace={false}
                  to="/pick-deck"
            >
                  <button>
                        Pick A Deck
                  </button>
            </Link>
            <Link
                  replace={false}
                  to="/recall"
            >
                  <button>
                        Start Game
                  </button>
            </Link>
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <StartScreenComponent />,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StartScreenComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="start-screen-container"
>
          <div
                    className="title-container"
          >
                    <h1>
                              Start Screen
                    </h1>
          </div>
          <div
                    className="selections-container"
          >
                    <Link
                              replace={false}
                              to="/sign-in"
                    >
                              <button>
                                        Sign In/Up
                              </button>
                    </Link>
                    <Link
                              replace={false}
                              to="/create-deck"
                    >
                              <button>
                                        Create A Deck
                              </button>
                    </Link>
                    <Link
                              replace={false}
                              to="/pick-deck"
                    >
                              <button>
                                        Pick A Deck
                              </button>
                    </Link>
                    <Link
                              replace={false}
                              to="/recall"
                    >
                              <button>
                                        Start Game
                              </button>
                    </Link>
          </div>
</div>,
        "_debugID": 4,
        "_renderedOutput": <div
          className="start-screen-container"
>
          <div
                    className="title-container"
          >
                    <h1>
                              Start Screen
                    </h1>
          </div>
          <div
                    className="selections-container"
          >
                    <Link
                              replace={false}
                              to="/sign-in"
                    >
                              <button>
                                        Sign In/Up
                              </button>
                    </Link>
                    <Link
                              replace={false}
                              to="/create-deck"
                    >
                              <button>
                                        Create A Deck
                              </button>
                    </Link>
                    <Link
                              replace={false}
                              to="/pick-deck"
                    >
                              <button>
                                        Pick A Deck
                              </button>
                    </Link>
                    <Link
                              replace={false}
                              to="/recall"
                    >
                              <button>
                                        Start Game
                              </button>
                    </Link>
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <StartScreenComponent />,
}
`;

exports[`Start Screen Tests should render correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="start-screen-container"
>
    <div
        className="title-container"
    >
        <h1>
            Start Screen
        </h1>
    </div>
    <div
        className="selections-container"
    >
        <Link
            replace={false}
            to="/sign-in"
        >
            <button>
                Sign In/Up
            </button>
        </Link>
        <Link
            replace={false}
            to="/create-deck"
        >
            <button>
                Create A Deck
            </button>
        </Link>
        <Link
            replace={false}
            to="/pick-deck"
        >
            <button>
                Pick A Deck
            </button>
        </Link>
        <Link
            replace={false}
            to="/recall"
        >
            <button>
                Start Game
            </button>
        </Link>
    </div>
</div>,
  "nodes": Array [
    <div
      className="start-screen-container"
>
      <div
            className="title-container"
      >
            <h1>
                  Start Screen
            </h1>
      </div>
      <div
            className="selections-container"
      >
            <Link
                  replace={false}
                  to="/sign-in"
            >
                  <button>
                        Sign In/Up
                  </button>
            </Link>
            <Link
                  replace={false}
                  to="/create-deck"
            >
                  <button>
                        Create A Deck
                  </button>
            </Link>
            <Link
                  replace={false}
                  to="/pick-deck"
            >
                  <button>
                        Pick A Deck
                  </button>
            </Link>
            <Link
                  replace={false}
                  to="/recall"
            >
                  <button>
                        Start Game
                  </button>
            </Link>
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <StartScreenComponent />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StartScreenComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="start-screen-container"
>
          <div
                    className="title-container"
          >
                    <h1>
                              Start Screen
                    </h1>
          </div>
          <div
                    className="selections-container"
          >
                    <Link
                              replace={false}
                              to="/sign-in"
                    >
                              <button>
                                        Sign In/Up
                              </button>
                    </Link>
                    <Link
                              replace={false}
                              to="/create-deck"
                    >
                              <button>
                                        Create A Deck
                              </button>
                    </Link>
                    <Link
                              replace={false}
                              to="/pick-deck"
                    >
                              <button>
                                        Pick A Deck
                              </button>
                    </Link>
                    <Link
                              replace={false}
                              to="/recall"
                    >
                              <button>
                                        Start Game
                              </button>
                    </Link>
          </div>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="start-screen-container"
>
          <div
                    className="title-container"
          >
                    <h1>
                              Start Screen
                    </h1>
          </div>
          <div
                    className="selections-container"
          >
                    <Link
                              replace={false}
                              to="/sign-in"
                    >
                              <button>
                                        Sign In/Up
                              </button>
                    </Link>
                    <Link
                              replace={false}
                              to="/create-deck"
                    >
                              <button>
                                        Create A Deck
                              </button>
                    </Link>
                    <Link
                              replace={false}
                              to="/pick-deck"
                    >
                              <button>
                                        Pick A Deck
                              </button>
                    </Link>
                    <Link
                              replace={false}
                              to="/recall"
                    >
                              <button>
                                        Start Game
                              </button>
                    </Link>
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <StartScreenComponent />,
}
`;
